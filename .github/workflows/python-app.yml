# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: QT-application

on:
  push:
    branches:
       - '**'        # matches every branch
  pull_request:
    branches:
       - '**'        # matches every branch

env:
  PYTHONPATH: ./src

jobs:
  flake8:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest pytest-qt pytest-xvfb
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. black defaults to 88 characters
          flake8 . --exclude src/ui/*, --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

  test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: openrndr/setup-opengl@v1.1
      - run: xvfb-run glxinfo


  test-linux:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - uses: openrndr/setup-opengl@v1.1
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 pytest pytest-qt pytest-xvfb
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        sudo apt-get install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0
        sudo apt-get install libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
        xvfb-run python -m pytest tests --color=yes --cov=src/models --cov=src/utils --cov=src/qtbased --cov-report=xml --cov-report=term-missing
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
          files: coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true

  test-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-qt pytest-xvfb
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        python -m pytest tests --color=yes --cov=src/models --cov=src/utils --cov-report=xml --cov-report=term-missing --ignore=tests/opengl

  test-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
    - name: Test with pytest
      run: |
        python -m pytest tests --color=yes --cov=src/models --cov=src/utils --cov-report=xml --cov-report=term-missing --ignore=tests/opengl
